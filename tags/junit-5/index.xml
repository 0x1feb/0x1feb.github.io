<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JUnit 5 on 0x1feb</title>
    <link>https://0x1feb.github.io/tags/junit-5/</link>
    <description>Recent content in JUnit 5 on 0x1feb</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 27 Sep 2024 23:39:26 +0900</lastBuildDate><atom:link href="https://0x1feb.github.io/tags/junit-5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JUnit 5 の動的テスト @TestTemplate を整理する</title>
      <link>https://0x1feb.github.io/posts/2024/09/27/understanding-junit-5-test-template-annotation/</link>
      <pubDate>Fri, 27 Sep 2024 23:39:26 +0900</pubDate>
      
      <guid>https://0x1feb.github.io/posts/2024/09/27/understanding-junit-5-test-template-annotation/</guid>
      <description>概要 JUnit 5 の動的テストを整理する。 @TestTemplate 前提 JUnit 5 解説 @TestTemplate @TestTemplate を付与したメソッドは、登録したプロバイダから返されるコンテキストの数だけ実行されるテストメ</description>
    </item>
    
    <item>
      <title>JUnit 5 の @TempDir でテスト実行時のみの一時ディレクトリを作成する</title>
      <link>https://0x1feb.github.io/posts/2024/09/24/understanding-junit-5-temp-dir-annotation/</link>
      <pubDate>Tue, 24 Sep 2024 22:06:50 +0900</pubDate>
      
      <guid>https://0x1feb.github.io/posts/2024/09/24/understanding-junit-5-temp-dir-annotation/</guid>
      <description>概要 JUnit 5 のテストにて、テスト実行時のみに使用する一時ディレクトリを作成する。 @TempDir テスト実行時のみ実態のあるファイルやディレクトリを扱いたいとき</description>
    </item>
    
    <item>
      <title>JUnit 5 の動的テスト @ParameterizedTest を整理する</title>
      <link>https://0x1feb.github.io/posts/2024/09/23/understanding-junit-5-parameterized-test-annotation/</link>
      <pubDate>Mon, 23 Sep 2024 12:40:01 +0900</pubDate>
      
      <guid>https://0x1feb.github.io/posts/2024/09/23/understanding-junit-5-parameterized-test-annotation/</guid>
      <description>概要 JUnit 5 の動的テストを整理する。 @ParameterizedTest @ValueSource @EnumSource @MethodSource @CsvSource @CsvFileSource @ArgumentsSource @ArgumentsSources 前提 JUnit 5 解説 @ParameterizedTest @ParameterizedTest は、単一のテストメソッドを複数の入力値またはパラメーターで実行できるようにす</description>
    </item>
    
    <item>
      <title>JUnit 5 の動的テスト @RepeatedTest を整理する</title>
      <link>https://0x1feb.github.io/posts/2024/09/09/understanding-junit-5-repeated-test-annotation/</link>
      <pubDate>Mon, 09 Sep 2024 19:20:26 +0900</pubDate>
      
      <guid>https://0x1feb.github.io/posts/2024/09/09/understanding-junit-5-repeated-test-annotation/</guid>
      <description>概要 JUnit 5 の動的テストを整理する。 @RepeatedTest 前提 JUnit 5 解説 @RepeatedTest @RepeatedTest は、指定した回数だけテストメソッドを繰り返すテストである。 例えば、以下の ExampleRepeatedTest は、@Repea</description>
    </item>
    
    <item>
      <title>JUnit 5 の静的テスト @Test を整理する</title>
      <link>https://0x1feb.github.io/posts/2024/09/08/understanding-junit-5-test-annotation/</link>
      <pubDate>Sun, 08 Sep 2024 23:48:51 +0900</pubDate>
      
      <guid>https://0x1feb.github.io/posts/2024/09/08/understanding-junit-5-test-annotation/</guid>
      <description>概要 JUnit 5 の静的テストを整理する。 @Test 前提 JUnit 5 解説 @Test @Test アノテーションは、付与したメソッドがテストメソッドであることを表す。 以下の ExampleTest は、@Test</description>
    </item>
    
    <item>
      <title>JUnit 5 のライフサイクルを整理する</title>
      <link>https://0x1feb.github.io/posts/2024/09/07/understanding-junit-5-lifecycle/</link>
      <pubDate>Sat, 07 Sep 2024 18:17:26 +0900</pubDate>
      
      <guid>https://0x1feb.github.io/posts/2024/09/07/understanding-junit-5-lifecycle/</guid>
      <description>概要 JUnit 5 のライフサイクルを整理する。 @TestInstance TestInstance.Lifecycle.PER_METHOD TestInstance.Lifecycle.PER_CLASS @BeforeAll @AfterAll @BeforeEach @AfterEach 前提 JUnit 5 説明 ライフサイクル JUnit 5 のテストクラスは、以下の 2 つのライフサイクルがある。 TestInstance.Lifecycle.PER_METHOD メソッ</description>
    </item>
    
    <item>
      <title>JUnit 5 のテストクラスを整理する</title>
      <link>https://0x1feb.github.io/posts/2024/09/06/junit-5-test-classes/</link>
      <pubDate>Fri, 06 Sep 2024 11:17:08 +0900</pubDate>
      
      <guid>https://0x1feb.github.io/posts/2024/09/06/junit-5-test-classes/</guid>
      <description>概要 JUnit 5 のテストクラスを整理する。 テストクラス @Nested 前提 JUnit 5 説明 テストクラス名 基本的には、テスト対象のクラス名の末尾に Test を付与したクラス名を使う</description>
    </item>
    
    <item>
      <title>Maven で JUnit 5 の @DisplayName が反映されない問題に対処する</title>
      <link>https://0x1feb.github.io/posts/2024/09/05/fixing-display-name-annotation-issue-in-maven-with-junit-5/</link>
      <pubDate>Thu, 05 Sep 2024 12:47:40 +0900</pubDate>
      
      <guid>https://0x1feb.github.io/posts/2024/09/05/fixing-display-name-annotation-issue-in-maven-with-junit-5/</guid>
      <description>概要 JUnit 5 にて、 @DisplayName を付与したテストを実行しても、実行結果に @DisplayName で設定した名前が反映されない。 maven-surefire-plugin の設定を入れることで、@DisplayName が反</description>
    </item>
    
    <item>
      <title>JUnit 5 で Java のテストコードを作成する</title>
      <link>https://0x1feb.github.io/posts/2024/09/04/writing-test-code-in-java-using-junit-5/</link>
      <pubDate>Wed, 04 Sep 2024 15:36:05 +0900</pubDate>
      
      <guid>https://0x1feb.github.io/posts/2024/09/04/writing-test-code-in-java-using-junit-5/</guid>
      <description>概要 JUnit 5 について、最低限の動きを整理する。 @Test アノテーション assertEquals fail 前提 JUnit 5 Java 8 (or higher) 今回のサンプルは Java 21 で作成 手順 ライブラリの設定 JUnit 5 User Guide の以下の</description>
    </item>
    
    <item>
      <title>JUnit 4 から JUnit 5 に移行する</title>
      <link>https://0x1feb.github.io/posts/2024/09/01/migrating-from-junit-4-to-junit-5/</link>
      <pubDate>Sun, 01 Sep 2024 10:57:31 +0900</pubDate>
      
      <guid>https://0x1feb.github.io/posts/2024/09/01/migrating-from-junit-4-to-junit-5/</guid>
      <description>概要 JUnit 4 のテストコードを JUnit 5 に移行する。 JUnit 4 のテストコードはそのままにして、新規のテストコードは JUnit 5 で作成する。 前提 JUnit 4 JUnit 5 手順 JUnit 5 ライブラ</description>
    </item>
    
  </channel>
</rss>
